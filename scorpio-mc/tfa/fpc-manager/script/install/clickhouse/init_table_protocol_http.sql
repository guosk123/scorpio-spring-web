CREATE TABLE IF NOT EXISTS fpc.t_fpc_protocol_http_log_record
( 
`level` LowCardinality(String) COMMENT '采集策略等级', 
`policy_name` LowCardinality(String) COMMENT '采集策略名称', 
`flow_id` UInt64 COMMENT '流ID',
`network_id` Array(LowCardinality(String)) COMMENT '网络ID',
`service_id` Array(LowCardinality(String)) COMMENT '业务ID', 
`application_id` UInt32 COMMENT '应用ID',
`start_time` DateTime64(9, 'UTC') COMMENT '开始时间',
`end_time` DateTime64(9, 'UTC') COMMENT '结束时间',
`src_ipv4` Nullable(IPv4) COMMENT '源IPv4',
`src_ipv6` Nullable(IPv6) COMMENT '源IPv6',
`src_port` UInt16 COMMENT '源端口',
`dest_ipv4` Nullable(IPv4) COMMENT '目的IPv4',
`dest_ipv6` Nullable(IPv6) COMMENT '目的IPv6',
`dest_port` UInt16 COMMENT '目的端口',
`file_name` String COMMENT '传输的文件名',
`file_type` LowCardinality(String) COMMENT '传输文件类型',
`file_flag` Int32 COMMENT '文件上传下载标识',
`accept_encoding` LowCardinality(String) COMMENT '支持的编码类型',
`location` String COMMENT 'HTTP重定向字段',
`method` LowCardinality(String) COMMENT '请求方法',
`host` String COMMENT '请求host',
`uri` String COMMENT '请求uri',
`origin` String COMMENT '请求origin',
`cookie` String COMMENT '请求cookie',
`user_agent` String COMMENT '请求UserAgent',
`referer` String COMMENT '请求referer',
`xff` String COMMENT '请求X-forword-for',
`status` LowCardinality(String) COMMENT '响应状态码',
`set_cookie` String COMMENT '响应set cookie',
`content_type` String COMMENT '响应Content-Type',
`accept_language` LowCardinality(String) COMMENT '响应Accept-Language',
`request_header` String COMMENT 'HTTP请求头',
`request_body` String COMMENT 'HTTP请求body',
`response_header` String COMMENT 'HTTP响应头',
`response_body` String COMMENT 'HTTP响应body',
`decrypted` UInt8 COMMENT '是否由TLS解密后生成的元数据',
`authorization` String COMMENT 'HTTP向服务器验证用户代理的凭据',
`auth_type` UInt8 COMMENT '认证类型',
`os_version` LowCardinality(String) COMMENT '操作系统',
`channel_state` Nullable(UInt8) COMMENT '代理连接状态',
`xff_first` Nullable(IPv6) COMMENT '头部xff',
`xff_last` Nullable(IPv6) COMMENT '尾部xff',
`xff_first_alias` String COMMENT '头部xff-地址组ID',
`xff_last_alias` String COMMENT '尾部xff-地址组ID',
INDEX i_policy_name (policy_name) TYPE bloom_filter() GRANULARITY 4, 
INDEX i_flow_id (flow_id) TYPE minmax GRANULARITY 4, 
INDEX i_network_id (network_id) TYPE bloom_filter() GRANULARITY 4, 
INDEX i_service_id (service_id) TYPE bloom_filter() GRANULARITY 4, 
INDEX i_application_id (application_id) TYPE minmax GRANULARITY 4,
INDEX i_end_time (end_time) TYPE minmax GRANULARITY 4, 
INDEX i_src_ipv4 (src_ipv4) TYPE minmax GRANULARITY 4, 
INDEX i_src_ipv6 (src_ipv6) TYPE minmax GRANULARITY 4, 
INDEX i_src_port (src_port) TYPE minmax GRANULARITY 4, 
INDEX i_dest_ipv4 (dest_ipv4) TYPE minmax GRANULARITY 4, 
INDEX i_dest_ipv6 (dest_ipv6) TYPE minmax GRANULARITY 4, 
INDEX i_dest_port (dest_port) TYPE minmax GRANULARITY 4, 
INDEX i_file_name (file_name) TYPE bloom_filter() GRANULARITY 4, 
INDEX i_file_type (file_type) TYPE bloom_filter() GRANULARITY 4, 
INDEX i_file_flag (file_flag) TYPE minmax GRANULARITY 4, 
INDEX i_method (method) TYPE bloom_filter() GRANULARITY 4, 
INDEX i_host (host) TYPE bloom_filter() GRANULARITY 4, 
INDEX i_uri (uri) TYPE bloom_filter() GRANULARITY 4, 
INDEX i_cookie (cookie) TYPE bloom_filter() GRANULARITY 4, 
INDEX i_user_agent (user_agent) TYPE bloom_filter() GRANULARITY 4, 
INDEX i_xff (xff) TYPE bloom_filter() GRANULARITY 4, 
INDEX i_status (status) TYPE bloom_filter() GRANULARITY 4, 
INDEX i_content_type (content_type) TYPE bloom_filter() GRANULARITY 4, 
INDEX i_decrypted (decrypted) TYPE minmax GRANULARITY 4,
INDEX i_auth_type (auth_type) TYPE minmax GRANULARITY 4, 
INDEX i_os_version (os_version) TYPE bloom_filter() GRANULARITY 4
)  
ENGINE = MergeTree() 
PARTITION BY toYYYYMMDD(start_time)
ORDER BY (start_time, flow_id) 
SETTINGS storage_policy = 'policy_hot_cold_0'
COMMENT '应用层协议详单-HTTP协议详单表'