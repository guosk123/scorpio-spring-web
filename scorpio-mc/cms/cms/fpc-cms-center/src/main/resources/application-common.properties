# application-common.properties

machloop.application.key=machloop-fpc-cms
machloop.application.token=ENC(I4Z6DaO8l2FF6nyDeZE+WEWgAetH66YpTV5+u7hyB6I=)
machloop.application.component=001000
machloop.application.secret=ENC(I4Z6DaO8l2FF6nyDeZE+WEWgAetH66YpTV5+u7hyB6I=)

server.address=127.0.0.1
server.port=41000
server.servlet.context-path=/common
server.use-forward-headers=true
server.compression.enabled=true
server.compression.min-response-size=131072

# tomcat 
server.tomcat.accept-count=1000
server.tomcat.max-keep-alive-requests=1000
server.tomcat.basedir=${FPC_DATA}/${FPC_APP}/tomcat
server.tomcat.protocol-header=X-Forwarded-Proto
server.tomcat.remote-ip-header=X-Forwarded-For
server.tomcat.port-header=X-Forwarded-Port
server.tomcat.accesslog.enabled=false
server.tomcat.accesslog.pattern=%t %a "%r" %s (%D ms)
server.tomcat.accesslog.directory=${FPC_LOG}/${FPC_APP}/
server.tomcat.internal-proxies=172\\.18\\.\\d{1,3}\\.\\d{1,3}|192\\.168\\.\\d{1,3}\\.\\d{1,3}|\\127\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}

# log
logging.file=${FPC_LOG}/${FPC_APP}/${FPC_APP}-log.txt
logging.file.max-size=10MB
logging.file.max-history=10
logging.path=${FPC_LOG}/${FPC_APP}
logging.pattern.console=
logging.level.root=INFO
logging.level.com.machloop=INFO

# actuator
management.server.address=127.0.0.1
management.endpoints.web.exposure.include=*
management.endpoints.jmx.exposure.exclude=*
management.endpoint.health.show-details=always

# database profile
spring.profiles.active=postgre,singlenode-session

# database
spring.datasource.url=jdbc:postgresql://localhost:5432/fpc-cms
spring.datasource.username=machloop
spring.datasource.password=ENC(D2npjk66cS0nOfvUlf0qf2Cfxp5M+uGs)
spring.datasource.driver-class-name=org.postgresql.Driver

# rest
restapi.timeout.ms=60000

# scheduler thread pool
spring.scheduler.thread.number=10

# 
file.clientmenu.path=/opt/components/fpc-apps/resource/${FPC_APP}-menu.json
file.dict.path=/opt/components/fpc-apps/resource/base-dict-zh.xml

#
healthchecker.watchdog.interval.second=3
healthchecker.watchdog.bark.threshold=2
healthchecker.timercron.threshold.second=30

#
task.health.timercron.schedule.cron=0/3 * * * * ?

#
task.monitor.schedule.fixedrate.ms=3000
task.monitor.schedule.cron=0 0/1 * * * ?
